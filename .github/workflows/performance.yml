name: JMeter Performance Test with SLA

# --------------------------------------------
# Evento que dispara este workflow
# --------------------------------------------
on:
  workflow_dispatch: # Permite ejecución manual desde GitHub Actions

jobs:
  performance:
    runs-on: ubuntu-latest # Runner de GitHub

    steps:
      # ------------------------------------------------
      # Clonar el repositorio
      # ------------------------------------------------
      - uses: actions/checkout@v4

      # ------------------------------------------------
      # Instalar JMeter
      # ------------------------------------------------
      - name: Setup JMeter
        run: |
          wget https://downloads.apache.org/jmeter/binaries/apache-jmeter-5.6.3.tgz
          tar -xzf apache-jmeter-5.6.3.tgz
          echo "JMETER_HOME=$(pwd)/apache-jmeter-5.6.3" >> $GITHUB_ENV

      # ------------------------------------------------
      # Ejecutar test plan de JMeter
      # ------------------------------------------------
      - name: Run Performance Test
        run: |
          mkdir -p results
          $JMETER_HOME/bin/jmeter -n \
            -t test-plans/UTEC-TP-S3-T5.jmx \
            -l results/results.jtl \
            -e -o results/html-report \
            -Jthreads=50 \
            -Jrampup=120

      # ------------------------------------------------
      # Chequear umbrales de SLA (robusto)
      # ------------------------------------------------
      - name: Check SLA Thresholds
        run: |
          RESULTS_FILE="results/results.jtl"
          THRESHOLD_P95=500       # P95 en ms
          THRESHOLD_ERROR_RATE=1  # Porcentaje

          # Verificar que el archivo existe
          if [ ! -f "$RESULTS_FILE" ]; then
            echo "❌ ERROR: El archivo $RESULTS_FILE no existe"
            exit 1
          fi

          # Calcular P95 (tiempo de respuesta)
          P95=$(awk -F',' 'NR>1 {times[NR-1]=$2} END { 
            n = asort(times); 
            idx = int(n*0.95); 
            if(idx<1) idx=1; 
            print times[idx] 
          }' "$RESULTS_FILE")

          # Calcular error rate (% de muestras que no son 200)
          ERROR_RATE=$(awk -F',' 'NR>1 {total++; if($4!="200") errors++} END {if(total>0) print (errors/total)*100; else print 0}' "$RESULTS_FILE")

          echo "P95 response time: $P95 ms"
          echo "Error rate: $ERROR_RATE %"

          # Validar umbrales
          if (( $(echo "$P95 > $THRESHOLD_P95" | bc -l) )); then
            echo "❌ FAIL: P95 ($P95 ms) supera el umbral ($THRESHOLD_P95 ms)"
            exit 1
          fi

          if (( $(echo "$ERROR_RATE > $THRESHOLD_ERROR_RATE" | bc -l) )); then
            echo "❌ FAIL: Error rate ($ERROR_RATE%) supera el umbral ($THRESHOLD_ERROR_RATE%)"
            exit 1
          fi

          echo "✅ Todos los umbrales cumplen SLA"

      # ------------------------------------------------
      # Subir reporte HTML SIEMPRE (aunque falle SLA)
      # ------------------------------------------------
      - name: Upload HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: performance-report
          path: results/html-report/
